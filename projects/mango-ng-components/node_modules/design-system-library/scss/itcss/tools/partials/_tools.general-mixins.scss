
// Breakpoints
// -------------------------

@mixin mng-breakpoint($size) {
  @if $size {
    @media screen and (min-width: $size) {
      @content;
    }
  }
  @else {
      @content;
  }
}


// Font-face
// -------------------------

@mixin mng-font-face($fontFamilyName, $fileName, $weight: normal, $style: normal) {
	@font-face {
		font-family: $fontFamilyName;
		font-weight: $weight;
		font-style: $style;
		src: url('#{$font-path}/#{$fileName}.woff2') format('woff2'),
		url('#{$font-path}/#{$fileName}.woff') format('woff'),
		url('#{$font-path}/#{$fileName}.ttf') format('truetype');
	}
}


// Escala tipográfica
// -------------------------

@mixin mng-typescale($size) {
  @if map-has-key($typescale-map, $size) {
    font-size: map-get($typescale-map, $size);
  } @else {
    @warn '¡Escala de fuente incorrecta!';
  }
}


// Font-stack sin serifas
// -------------------------

@mixin mng-family-sans {
  font-family: $font-sans;
}


// Font-stack serifas
// -------------------------

@mixin mng-family-serif {
  font-family: $font-serif;
}


// Line-height
// -------------------------

@mixin mng-line-height($el) {
  @if $el == 'heading' {
    line-height: 1.25;
  } @else if $el == 'body' {
    line-height: 1.5;
  }
}

// Ocultar elemento
// -------------------------

@mixin mng-hidden-visually() {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
}

// Ancho columnas de la grid
// -------------------------

@mixin mng-col-width($column) {
  flex-basis: 100% / 12 * $column;
  max-width: 100% / 12 * $column;
}


// Desplazamiento de columnas de la grid
// -------------------------

@mixin mng-col-offset($column) {
  margin-left: 100% / 12 * $column;
}


// Puntos suspensivos para cadenas de texto largas
// -------------------------
@mixin mng-text-truncate() {
  max-width: 100%;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important;  
}

// Skeleton
// --------

@mixin mng-a-skeleton-ltr() {
	// -webkit-animation: o-animSkeletonLtr 1.5s linear infinite forwards;
  // animation: o-animSkeletonLtr 1.5s linear infinite forwards;
  @include mng-vendor-prefix((animation: o-animSkeletonLtr 1.5s linear infinite forwards), webkit moz ms o);
	background: -webkit-linear-gradient(left, $color-concrete 8%, 18% $color-white, $color-concrete 33%);
	background: linear-gradient(to right, $color-concrete 8%, $color-white 18%, $color-concrete 33%);
	background-size: 80rem 10.4rem;
}

@mixin mng-a-skeleton() {
  //-webkit-animation: o-animSkeleton 2.5s cubic-bezier(.49,.22,.57,.88) infinite alternate;
  @include mng-vendor-prefix((animation: o-animSkeleton 2.5s cubic-bezier(.49, .22, .57, .88) infinite alternate), webkit moz ms o);
	background: $color-concrete;
}


// Mixin to prefix several properties at once
// @param {Map} $declarations - Declarations to prefix
// @param {List} $prefixes (()) - List of prefixes to print
// Ej. @include mng-vendor-prefix((transition: all 4s ease, border-radius: 10px 5px), webkit moz ms o);
@mixin mng-vendor-prefix($declarations, $prefixes: ()) {
	@each $property, $value in $declarations {
		@each $prefix in $prefixes {
   			#{'-' + $prefix + '-' + $property}: $value;
   		}
   		// Output standard non-prefixed declaration
		#{$property}: $value;
   	}
}