//mixin mngInput(text, id, name, style)
	.c-mngInput(class=style)
		if (style !== "is-disabled")
			input.c-mngInput__input(id=id, name=name, type="text", placeholder=text)
		else
			input.c-mngInput__input(id=id, name=name, type="text", placeholder=text, disabled)
		label.c-mngInput__label.u-hidden-visually(for=id)
			= text
//INPUT
mixin mngInput(text, id, name, error, style)
	.c-mngInput(class=style)
		label.c-mngInput__label.u-hidden-visually(for=id)= text
		if (style == "is-disabled")
			input.c-mngInput__input(id=id, name=name, type="text", placeholder=text, disabled value="Input value")
			.c-mngInput__feedback.u-hidden= error
		else if (style == "is-readonly")
			input.c-mngInput__input(id=id, name=name, type="text", placeholder=text, readonly)
			.c-mngInput__feedback.u-hidden= error
		else
			input.c-mngInput__input(id=id, name=name, type="text", placeholder=text)
			.c-mngInput__feedback= error

mixin mngInputError(text, id, name, error)
	+mngInput(text, id, name, error, 'is-error')

mixin mngInputDisabled(text, id, name, error)
	+mngInput(text, id, name, error, 'is-disabled')

mixin mngInputReadonly(text, id, name, error)
	+mngInput(text, id, name, error, 'is-readonly')

mixin mngInputReverse(text, id, name, error)
	+mngInput(text, id, name, error, 'c-mngInput--reverse')

mixin mngInputReverseError(text, id, name, error)
	+mngInput(text, id, name, error, 'c-mngInput--reverse is-error')

mixin mngInputReverseDisabled(text, id, name, error)
	+mngInput(text, id, name, error, 'c-mngInput--reverse is-disabled')

mixin mngInputIcon(text, id, name, error, position, icon)
	.c-mngInput(class=style)
		label.c-mngInput__label.u-hidden-visually(for=id)= text
		if (position == "left")
			input.c-mngInput__input.c-mngInput__input--pl(id=id, name=name, type="text", placeholder=text)
			button.c-mngInput__btn.c-mngInput__btn--fl
				+svg-icon(icon)(class="o-mngIco--mr")
		else	
			input.c-mngInput__input(id=id, name=name, type="text", placeholder=text)
			button.c-mngInput__btn.c-mngInput__btn--fr
				+svg-icon(icon)